<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:core="clr-namespace:TUM.CMS.VplControl.Core;assembly=TUM.CMS.VplControl">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="SearchTextBoxStyle.xaml" />
        <ResourceDictionary Source="Slider.xaml" />
        <ResourceDictionary Source="RadialMenu.xaml" />
        <ResourceDictionary Source="InputOutputStackPanel.xaml" />
        <ResourceDictionary Source="Buttons.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Color x:Key="ColorBlue" R="99" G="133" B="199" A="255" />
    <Color x:Key="ColorRed" R="211" G="95" B="95" A="255" />
    <Color x:Key="ColorYellow" R="255" G="221" B="85" A="255" />
    <Color x:Key="ColorOker" R="219" G="198" B="165" A="255" />

    <SolidColorBrush x:Key="BrushBlue" Color="{StaticResource ColorBlue}" />
    <SolidColorBrush x:Key="BrushRed" Color="{StaticResource ColorRed}" />
    <SolidColorBrush x:Key="BrushYellow" Color="{StaticResource ColorYellow}" />
    <SolidColorBrush x:Key="BrushOker" Color="{StaticResource ColorOker}" />


    <!-- Dynamic resources -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="White" />
    <SolidColorBrush x:Key="GridBrush" Color="DarkGray" />

    <FontFamily x:Key="FontFamily" />
    <SolidColorBrush x:Key="BrushHighlighting" Color="{StaticResource ColorYellow}" />

    <VisualBrush x:Key="VplGridBrush" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,50,50"
                 ViewboxUnits="Absolute" Viewbox="0,0,50,50">
        <VisualBrush.Visual>
            <Rectangle Stroke="{DynamicResource GridBrush}" StrokeThickness="0.1" Height="1000" Width="1000"
                       Fill="{DynamicResource BackgroundBrush}" />
        </VisualBrush.Visual>
    </VisualBrush>

    <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource ColorBlue}" />
    <SolidColorBrush x:Key="ButtonFillBrush" Color="White" />

    <SolidColorBrush x:Key="NodeBorderBrush" Color="DarkGray" />
    <SolidColorBrush x:Key="GroupBorderBrush" Color="{DynamicResource ColorOker}" />
    
    <SolidColorBrush x:Key="NodeBorderBrushMouseOver" Color="Black" />
    <SolidColorBrush x:Key="NodeBorderBrushSelection" Color="Black" />

    <SolidColorBrush x:Key="GroupBorderBrushMouseOver" Color="Black" />
    <SolidColorBrush x:Key="GroupBorderBrushSelection" Color="Black" />

    <SolidColorBrush x:Key="NodeBackgroundBrush" Color="WhiteSmoke" />
    <SolidColorBrush x:Key="NodeBackgroundBrushError" Color="Red" />

    <SolidColorBrush x:Key="GroupBackgroundBrush" Color="Transparent" />
    
    <SolidColorBrush x:Key="CommentBackgroundBrush" Color="{DynamicResource ColorBlue}" />
    <SolidColorBrush x:Key="CommentBackgroundBrushError" Color="{DynamicResource ColorRed}" />

    <SolidColorBrush x:Key="ConnectorBrush" Color="LightGray" />
    <system:Double x:Key="ConnectorThickness">2</system:Double>

    <SolidColorBrush x:Key="PortFillBrush" Color="White" />
    <SolidColorBrush x:Key="PortStrokeBrush" Color="LightGray" />
    <system:Double x:Key="PortSize">20</system:Double>
    <system:Double x:Key="PortStrokeThickness">1.5</system:Double>


    <SolidColorBrush x:Key="TooltipBackgroundBrush" Color="LightGray" />
    <SolidColorBrush x:Key="TooltipBorderBrush" Color="Transparent" />

    <SolidColorBrush x:Key="LineStrokeBrush" Color="LightGray" />
    <system:Double x:Key="LineStrokeThickness">2</system:Double>


    <SolidColorBrush x:Key="ConnEllipseFillBrush" Color="{DynamicResource ColorRed}" />
    <system:Double x:Key="ConnEllipseSize">14</system:Double>

    <!-- Dynamic resources -->


    <Style x:Key="VplControlStyle" TargetType="Canvas">
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
    </Style>


    <Style x:Key="VplElementBorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource NodeBorderBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Background" Value="{DynamicResource NodeBackgroundBrush}" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource NodeBorderBrushMouseOver}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="VplGroupBorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource GroupBorderBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Background" Value="{DynamicResource GroupBackgroundBrush}" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource GroupBorderBrushMouseOver}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="VplElementBorderSelectionStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource NodeBorderBrushSelection}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Background" Value="{DynamicResource NodeBackgroundBrush}" />
    </Style>

    <Style x:Key="HitTestBorderStyle" TargetType="Border">
        <Setter Property="IsHitTestVisible" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>


    <Style x:Key="MainContentGridStyle" TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource NodeBackgroundBrush}" />
    </Style>


    <Style x:Key="VplConnectorStyle" TargetType="Path">
        <Setter Property="Stroke" Value="{DynamicResource ConnectorBrush}" />
        <Setter Property="StrokeThickness" Value="{DynamicResource ConnectorThickness}" />
    </Style>

    <Style x:Key="VplSelectedConnectorStyle" TargetType="Path">
        <Setter Property="Stroke" Value="Black" />
        <Setter Property="StrokeThickness" Value="{DynamicResource ConnectorThickness}" />
    </Style>
    

    <Style x:Key="ToolTipStyle" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border"
                            Background="{DynamicResource TooltipBackgroundBrush}"
                            BorderBrush="{DynamicResource TooltipBorderBrush}"
                            BorderThickness="1"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">

                        <ContentPresenter
                            Margin="4"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="CornerRadius" Value="5" />
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolTipRightStyle" BasedOn="{StaticResource ToolTipStyle}" TargetType="ToolTip">
        <Setter Property="ToolTipService.Placement" Value="Right" />
        <Setter Property="ToolTipService.HorizontalOffset" Value="13" />
    </Style>

    <ToolTip x:Key="ToolTipRight" Style="{StaticResource ToolTipRightStyle}"
             DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
        <StackPanel>
            <TextBlock Text="{Binding Text}" />
        </StackPanel>
    </ToolTip>

    <Style x:Key="ToolTipLeftStyle" BasedOn="{StaticResource ToolTipStyle}" TargetType="ToolTip">
        <Setter Property="ToolTipService.Placement" Value="Left" />
        <Setter Property="ToolTipService.HorizontalOffset" Value="-13" />
    </Style>

    <ToolTip x:Key="ToolTipLeft" Style="{StaticResource ToolTipLeftStyle}"
             DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
        <StackPanel>
            <TextBlock Text="{Binding Text}" />
        </StackPanel>
    </ToolTip>

    <Style x:Key="VplPortStyleRight" TargetType="core:Port">
        <Setter Property="Width" Value="{DynamicResource PortSize}" />
        <Setter Property="Height" Value="{DynamicResource PortSize}" />
        <Setter Property="Margin" Value="5, 5, 7, 5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="core:Port">
                    <Ellipse Name="ellipse" Width="{DynamicResource PortSize}" Height="{DynamicResource PortSize}"
                             Fill="{DynamicResource PortFillBrush}" Stroke="{DynamicResource PortStrokeBrush}"
                             StrokeThickness="{DynamicResource PortStrokeThickness}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ellipse" Property="Fill" Value="{DynamicResource BrushHighlighting}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource BrushHighlighting}" />
                            <Setter Property="ToolTip" Value="{StaticResource ToolTipRight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VplPortStyleLeft" TargetType="core:Port">
        <Setter Property="Width" Value="{DynamicResource PortSize}" />
        <Setter Property="Height" Value="{DynamicResource PortSize}" />
        <Setter Property="Margin" Value="5, 5, 7, 5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="core:Port">
                    <Ellipse Name="ellipse" Width="{DynamicResource PortSize}" Height="{DynamicResource PortSize}"
                             Fill="{DynamicResource PortFillBrush}" Stroke="{DynamicResource PortStrokeBrush}"
                             StrokeThickness="{DynamicResource PortStrokeThickness}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ellipse" Property="Fill" Value="{DynamicResource BrushHighlighting}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource BrushHighlighting}" />
                            <Setter Property="ToolTip" Value="{StaticResource ToolTipLeft}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="VplConnectorPortStyle" TargetType="core:ConnectorPort">
        <Setter Property="Width" Value="{DynamicResource ConnEllipseSize}" />
        <Setter Property="Height" Value="{DynamicResource ConnEllipseSize}" />
        <!-- <Setter Property="Margin" Value="0,0,0,0" /> -->
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="core:ConnectorPort">
                    <Ellipse Name="ellipse" Width="{DynamicResource ConnEllipseSize}"
                             Height="{DynamicResource ConnEllipseSize}"
                             Fill="{DynamicResource ConnEllipseFillBrush}"
                             Stroke="{DynamicResource ConnEllipseFillBrush}"
                             StrokeThickness="{DynamicResource PortStrokeThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="VplLineStyle" TargetType="Line">
        <Setter Property="Stroke" Value="{DynamicResource LineStrokeBrush}" />
        <Setter Property="StrokeDashArray" Value="1,3" />
        <Setter Property="StrokeThickness" Value="{DynamicResource LineStrokeThickness}" />
    </Style>


    <Style x:Key="VplEllipseConnStyle" TargetType="Ellipse">
        <Setter Property="Width" Value="{DynamicResource ConnEllipseSize}" />
        <Setter Property="Height" Value="{DynamicResource ConnEllipseSize}" />
        <Setter Property="IsHitTestVisible" Value="false" />
        <Setter Property="Fill" Value="{DynamicResource ConnEllipseFillBrush}" />
    </Style>

    <Style x:Key="VplGroupStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource NodeBorderBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="Background" Value="{DynamicResource NodeBackgroundBrush}" />
    </Style>


    <Style x:Key="FlatListBoxItem" TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ItemText}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <StackPanel>
                        <Border Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true"
                                Height="35">
                            <ContentPresenter Margin="10 0 10 0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </StackPanel>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource BrushHighlighting}" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource BrushHighlighting}" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource BrushGray}" />
                        </Trigger>

                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="WhiteSmoke" />
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="ListBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource FlatListBoxItem}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="EditableLabelStyleNode" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource BrushOker}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <TextBox Name="textBox"
                                 Grid.ZIndex="1"
                                 Padding="0,0,0,0"
                                 Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type Label}}, Path=Content, UpdateSourceTrigger=PropertyChanged}"
                                 Opacity="0" />
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="textBox" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="EditableLabelStyleGroup" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <TextBox Name="textBox"
                                 Margin="0"
                                 Grid.ZIndex="1"
                                 Padding="0,0,0,0"
                                 FontSize="16"
                                 Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type Label}}, Path=Content, UpdateSourceTrigger=PropertyChanged}"
                                 Opacity="0" />
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="textBox" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Scrollbar Thumbs-->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto"
                                   Height="Auto" Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch" Width="Auto" Height="Auto"
                                Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScrollBars-->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="#8C8C8C" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>

                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}"
                                       Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0"
                                              Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0"
                                              Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb"
                                    Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb"
                                    Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="8" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ControlBaseStyle" TargetType="Control">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ControlBaseStyle}" />
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ControlBaseStyle}" />
    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource ControlBaseStyle}" />
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ControlBaseStyle}" />
    <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource ControlBaseStyle}" />
    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ControlBaseStyle}" />

</ResourceDictionary>